@{


    Layout = "~/Views/Shared/_DashboardLayoutUser.cshtml";

    var userId = Context.Session.GetInt32("userId");
}






<div class="page-header d-print-none">
    <div class="container-xl">
        <div class="row g-2 align-items-center">
            <div class="col">
                <!-- Page pre-title -->
                @*  <div class="page-pretitle">
                Overview
                </div>*@
                <h2 class="page-title">
                    Orders Page
                </h2>
            </div>
            <!-- Page title actions -->
            <div class="col-auto ms-auto d-print-none">
                <div class="btn-list">
                    @*  <span class="d-none d-sm-inline">
                    <a href="#" class="btn">
                    New view
                    </a>
                    </span>*@

                    @*  <a href="#" class="btn btn-primary d-none d-sm-inline-block" data-bs-toggle="modal" data-bs-target="#modal-create">
                    <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                    Create new Recipe
                    </a>*@
                    <a href="#" class="btn btn-primary d-sm-none btn-icon" data-bs-toggle="modal" data-bs-target="#modal-report" aria-label="Create new report">
                        <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Page body -->
<div class="page-body">
    <div class="container-xl">

        <div class="card">
            <div class="row mb-3" style="padding : 16px; align-self: center; ">
                <div class="col-auto">
                    <label for="startDate" class="form-label">Start Date:</label>
                    <input type="date" id="startDate" class="form-control">
                </div>
                <div class="col-auto">
                    <label for="endDate" class="form-label">End Date:</label>
                    <input type="date" id="endDate" class="form-control">
                </div>
                <div class="col-auto align-self-end">
                    <button id="searchBtn" class="btn btn-primary">Search</button>
                </div>
            </div>



            <div class="table-responsive" style="padding-left : 20px;padding-right: 20px;    ">
                <table id="example" class="table card-table table-vcenter text-nowrap datatable" style="width:100%">
                    <thead>
                        <tr>
                            <th>Order Id</th>
                            <th>Order Status</th>
                            <th>Order Price</th>
                            <th>Recipe Name</th>
                            
                            <th>Chief Name</th>
                            <th>Created At</th>
                            @*   <th>Details</th>*@

                        </tr>
                    </thead>
                    <tbody>

                        <!-- Additional rows as needed -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>






@section Scripts {

    <script>






        document.addEventListener('DOMContentLoaded', function () {



            var recipeIdNow = 1;
            var table = $('#example').DataTable({
                responsive: true,
                "scrollX": true,
                "pagingType": "full_numbers",
                "pageLength": 5,
                "lengthChange": true,
                "ajax": {
                    "url": '@Url.Action("LoadDataByUserId", "Orders")',
                    "type": "GET",
                    "data": function (d) {
                        d.id = @userId;
                    }
                },
                "columns": [
                    { "data": "orderId" },
                    { "data": "orderStatus" },
                    { "data": "orderPrice" },
                    { "data": "recipeName" },
                   
                    { "data": "chiefName" },
                    { "data": "createdAt" },
                ],
                "lengthMenu": [5, 10, 15, 20],
                "language": {
                    "paginate": {
                        "first": '<<',  // Change as per need
                        "last": '>>',  // Change as per need
                        "next": '>',  // Change as per need
                        "previous": '<'  // Change as per need
                    }
                },


            });
            $('#example tbody').on('click', 'button', function () {
                var action = this.textContent.trim();
                var rowData = table.row($(this).parents('tr')).data();
                var recipeId = rowData['recipeId'];

                recipeIdNow = recipeId;
                if (action === 'Ingredients') {
                    document.getElementById("tttt").value = recipeIdNow;
                    ingredientsTable.ajax.reload();
                }
                else if (action === 'Steps') {
                    document.getElementById("recipeIdStep").value = recipeIdNow;
                    stepsTable.ajax.reload();
                }

                else if (action === 'Notes') {
                    document.getElementById("recipeIdNote").value = recipeIdNow;
                    notesTable.ajax.reload();
                }


                else if (action === 'Details') {
                    $.ajax({
                        url: '@Url.Action("GetRecipeById", "Recipes")',
                        type: 'GET',
                        data: { id: recipeId },
                        success: function (data) {


                            var edit = document.getElementById("editForm");
                            edit.RecipeViewModel_RecipeName.value = data.recipeName;

                            edit.RecipeViewModel_RecipeStatus.value = data.recipeStatus;
                            edit.RecipeViewModel_RecipePrice.value = data.recipePrice;
                            edit.RecipeViewModel_RecipeCookingTimeMinutes.value = data.recipeCookingTimeMinutes;
                            edit.RecipeViewModel_RecipePreparingTimeMinutes.value = data.recipePreparingTimeMinutes;
                            edit.RecipeViewModel_RecipeDescription.value = data.recipeDescription;
                            edit.RecipeViewModel_RecipeExplanation.value = data.recipeExplanation;
                            edit.RecipeViewModel_RecipeId.value = data.recipeId;
                            edit.RecipeViewModel_RecipeCategoryId.value = data.categoryId;
                            edit.RecipeViewModel_RecipeServings.value = data.recipeServings;

                            document.getElementById("RecipeCardImgPathEdit").src = '/recipesImage/' + data.recipeCardImgPath;
                            document.getElementById("RecipeVideoPathEdit").src = '/recipesVideos/' + data.recipeVideoPath;
                            document.getElementById("RecipeMainImgPathEdit").src = '/recipesImage/' + data.recipeMainImgPath;

                            // Populate other fields...
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log('Error fetching user data:', errorThrown);
                        }
                    });
                }
                else if (action === 'Change Status') {
                    $.ajax({
                        url: '@Url.Action("GetRecipeById", "Recipes")',
                        type: 'GET',
                        data: { id: recipeId },
                        success: function (data) {

                            var edit = document.getElementById("updateStatusForm");


                            edit.UpdateStatusViewModel_RecipeStatus.value = data.recipeStatus;
                            edit.UpdateStatusViewModel_RecipeId.value = data.recipeId;


                            edit.action = "@Url.Action("UpdateStatus", "Recipes")";
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log('Error fetching user data:', errorThrown);
                        }
                    });



                }
            });















            $('#searchBtn').on('click', function () {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();

                // Send AJAX request to the backend
                $.ajax({
                    url: '@Url.Action("SearchByDate", "Recipes")', // Change the URL to your backend endpoint
                    type: 'GET',
                    data: { minDate: startDate, maxDate: endDate },
                    success: function (response) {
                        // Update DataTable with new data
                        table.clear().rows.add(response.data).draw();
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.error(error);
                    }
                });
            });













        });








    </script>
}


    <style>
        .dataTables_wrapper .dataTable .btn {
            height: auto;
            // Adjust button heights padding: 0.375rem 0.75rem;
            // Bootstrap 4 padding style
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 1.2em 0.4em;
            // Increase padding around buttons color: #007bff;
            // Change the text color background-color: #ffffff;
            // Change background color border: 1px solid #ddd;
            // Add border margin-right: 5px;
        }

            .dataTables_wrapper .dataTables_paginate .paginate_button.current,
            .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
                color: #fff;
                // Change text color for active/hover background-color: #007bff;
                // Change background color for active/hover border-color: #007bff;
                // Change border color for active/hover
            }

        div.dataTables_wrapper div.dataTables_info {
            padding-top: 1.85em;
        }

        .dataTables_filter input {
            height: 36px; /* Increase input height */
            padding: 6px 12px; /* Adjust padding for better visual appearance */
            font-size: 14px; /* Optional: Increase font size if needed */
        }
    </style>